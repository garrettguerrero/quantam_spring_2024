import{mergeAttributes as t,markInputRule as e,markPasteRule as s,Mark as n}from"@tiptap/core";const a=/(?:^|\s)((?:\*)((?:[^*]+))(?:\*))$/;const i=/(?:^|\s)((?:\*)((?:[^*]+))(?:\*))/g;const r=/(?:^|\s)((?:_)((?:[^_]+))(?:_))$/;const o=/(?:^|\s)((?:_)((?:[^_]+))(?:_))/g;const d=n.create({name:"italic",addOptions(){return{HTMLAttributes:{}}},parseHTML(){return[{tag:"em"},{tag:"i",getAttrs:t=>t.style.fontStyle!=="normal"&&null},{style:"font-style=italic"}]},renderHTML({HTMLAttributes:e}){return["em",t(this.options.HTMLAttributes,e),0]},addCommands(){return{setItalic:()=>({commands:t})=>t.setMark(this.name),toggleItalic:()=>({commands:t})=>t.toggleMark(this.name),unsetItalic:()=>({commands:t})=>t.unsetMark(this.name)}},addKeyboardShortcuts(){return{"Mod-i":()=>this.editor.commands.toggleItalic(),"Mod-I":()=>this.editor.commands.toggleItalic()}},addInputRules(){return[e({find:a,type:this.type}),e({find:r,type:this.type})]},addPasteRules(){return[s({find:i,type:this.type}),s({find:o,type:this.type})]}});export{d as Italic,d as default,a as starInputRegex,i as starPasteRegex,r as underscoreInputRegex,o as underscorePasteRegex};

