import{mergeAttributes as t,textblockTypeInputRule as e,Node as r}from"@tiptap/core";import{PluginKey as n,TextSelection as s,Plugin as a}from"@tiptap/pm/state";const o=/^```([a-z]+)?[\s\n]$/;const i=/^~~~([a-z]+)?[\s\n]$/;const l=r.create({name:"codeBlock",addOptions(){return{languageClassPrefix:"language-",exitOnTripleEnter:true,exitOnArrowDown:true,HTMLAttributes:{}}},content:"text*",marks:"",group:"block",code:true,defining:true,addAttributes(){return{language:{default:null,parseHTML:t=>{var e;const{languageClassPrefix:r}=this.options;const n=[...((e=t.firstElementChild)===null||e===void 0?void 0:e.classList)||[]];const s=n.filter((t=>t.startsWith(r))).map((t=>t.replace(r,"")));const a=s[0];return a||null},rendered:false}}},parseHTML(){return[{tag:"pre",preserveWhitespace:"full"}]},renderHTML({node:e,HTMLAttributes:r}){return["pre",t(this.options.HTMLAttributes,r),["code",{class:e.attrs.language?this.options.languageClassPrefix+e.attrs.language:null},0]]},addCommands(){return{setCodeBlock:t=>({commands:e})=>e.setNode(this.name,t),toggleCodeBlock:t=>({commands:e})=>e.toggleNode(this.name,"paragraph",t)}},addKeyboardShortcuts(){return{"Mod-Alt-c":()=>this.editor.commands.toggleCodeBlock(),Backspace:()=>{const{empty:t,$anchor:e}=this.editor.state.selection;const r=e.pos===1;return!(!t||e.parent.type.name!==this.name)&&(!(!r&&e.parent.textContent.length)&&this.editor.commands.clearNodes())},Enter:({editor:t})=>{if(!this.options.exitOnTripleEnter)return false;const{state:e}=t;const{selection:r}=e;const{$from:n,empty:s}=r;if(!s||n.parent.type!==this.type)return false;const a=n.parentOffset===n.parent.nodeSize-2;const o=n.parent.textContent.endsWith("\n\n");return!(!a||!o)&&t.chain().command((({tr:t})=>{t.delete(n.pos-2,n.pos);return true})).exitCode().run()},ArrowDown:({editor:t})=>{if(!this.options.exitOnArrowDown)return false;const{state:e}=t;const{selection:r,doc:n}=e;const{$from:s,empty:a}=r;if(!a||s.parent.type!==this.type)return false;const o=s.parentOffset===s.parent.nodeSize-2;if(!o)return false;const i=s.after();if(i===void 0)return false;const l=n.nodeAt(i);return!l&&t.commands.exitCode()}}},addInputRules(){return[e({find:o,type:this.type,getAttributes:t=>({language:t[1]})}),e({find:i,type:this.type,getAttributes:t=>({language:t[1]})})]},addProseMirrorPlugins(){return[new a({key:new n("codeBlockVSCodeHandler"),props:{handlePaste:(t,e)=>{if(!e.clipboardData)return false;if(this.editor.isActive(this.type.name))return false;const r=e.clipboardData.getData("text/plain");const n=e.clipboardData.getData("vscode-editor-data");const a=n?JSON.parse(n):void 0;const o=a===null||a===void 0?void 0:a.mode;if(!r||!o)return false;const{tr:i}=t.state;i.replaceSelectionWith(this.type.create({language:o}));i.setSelection(s.near(i.doc.resolve(Math.max(0,i.selection.from-2))));i.insertText(r.replace(/\r\n?/g,"\n"));i.setMeta("paste",true);t.dispatch(i);return true}}})]}});export{l as CodeBlock,o as backtickInputRegex,l as default,i as tildeInputRegex};

