import{mergeAttributes as t,markInputRule as e,markPasteRule as s,Mark as o}from"@tiptap/core";const n=/(?:^|\s)((?:\*\*)((?:[^*]+))(?:\*\*))$/;const r=/(?:^|\s)((?:\*\*)((?:[^*]+))(?:\*\*))/g;const d=/(?:^|\s)((?:__)((?:[^__]+))(?:__))$/;const a=/(?:^|\s)((?:__)((?:[^__]+))(?:__))/g;const i=o.create({name:"bold",addOptions(){return{HTMLAttributes:{}}},parseHTML(){return[{tag:"strong"},{tag:"b",getAttrs:t=>t.style.fontWeight!=="normal"&&null},{style:"font-weight",getAttrs:t=>/^(bold(er)?|[5-9]\d{2,})$/.test(t)&&null}]},renderHTML({HTMLAttributes:e}){return["strong",t(this.options.HTMLAttributes,e),0]},addCommands(){return{setBold:()=>({commands:t})=>t.setMark(this.name),toggleBold:()=>({commands:t})=>t.toggleMark(this.name),unsetBold:()=>({commands:t})=>t.unsetMark(this.name)}},addKeyboardShortcuts(){return{"Mod-b":()=>this.editor.commands.toggleBold(),"Mod-B":()=>this.editor.commands.toggleBold()}},addInputRules(){return[e({find:n,type:this.type}),e({find:d,type:this.type})]},addPasteRules(){return[s({find:r,type:this.type}),s({find:a,type:this.type})]}});export{i as Bold,i as default,n as starInputRegex,r as starPasteRegex,d as underscoreInputRegex,a as underscorePasteRegex};

